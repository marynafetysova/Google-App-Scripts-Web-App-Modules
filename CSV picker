<!DOCTYPE html>
<html>

<head>
    <base target="_top">
</head>

<body>


    <script>

        var ServerIP = '';
        var SQL_Port = '';
        var SQL_Usr = '';
        var SQL_Pwd = '';
        var SQL_DB = '';
        var CSV_CONFIG = 'csvconfig';
        var scope = ['https://www.googleapis.com/auth/drive'];
        var logArray_;
        var pickerApiLoaded = false;
        var oauthToken;
        var url = 'nothing';
        var developerKey = 'AIzaSyBKvgpHUnRVDY9ISew-zo1wl1ymexyz6kA';
        var clientId = '635848991737-34tu0csn215v339e2m1mjrm42rbg9as2.apps.googleusercontent.com';
        var appId = "635848991737";


        function onAuthApiLoad() {
            window.gapi.auth2.authorize(
                {
                    'client_id': clientId,
                    'scope': scope,
                    'immediate': false
                },
                handleAuthResult);
        }


        function onPickerApiLoad() {
            pickerApiLoaded = true;
            var view = new google.picker.View(google.picker.ViewId.DOCS);
            picker.setVisible(true);
        }


        function handleAuthResult(authResult) {
            if (authResult && !authResult.error) {
                oauthToken = authResult.access_token;

                var view = new google.picker.View(google.picker.ViewId.DOCS);
                picker.setVisible(true);
            }
        }


        function createPicker() {
            if (pickerApiLoaded && oauthToken) {
                var view = new google.picker.View(google.picker.ViewId.DOCS);
                var picker = new google.picker.PickerBuilder()
                    .enableFeature(google.picker.Feature.NAV_HIDDEN)
                    .enableFeature(google.picker.Feature.MULTISELECT_ENABLED)
                    .setAppId(appId)
                    .setOAuthToken(oauthToken)
                    .addView(view)
                    .addView(new google.picker.DocsUploadView())
                    .setDeveloperKey(developerKey)
                    .setCallback(pickerCallback)
                    .build();
                picker.setVisible(true);
            }
        }


        function pickerCallback(data) {
            if (data[google.picker.Response.ACTION] == google.picker.Action.PICKED) {
                var doc = data[google.picker.Response.DOCUMENTS][0];
                url = doc[google.picker.Document.URL];
            }
            var message = 'You picked: ' + url;
            document.getElementById('result').innerHTML = message;
        }





        function getCSVFIle() {
            gapi.load('auth', { 'callback': onAuthApiLoad });
            gapi.load('picker', { 'callback': onPickerApiLoad });
            google.load('picker', '1', { "callback": createPicker });
            if (data[google.picker.Response.ACTION] == google.picker.Action.PICKED) {
                var fileId = data.docs[0].id;
                window.alert('ok');
                google.script.run
                    .withSuccessHandler(useData)
                    .doSomething(fileId);
            }
            if (data[google.picker.Response.ACTION] == google.picker.Action.PICKED) {
                var doc = data[google.picker.Response.DOCUMENTS][0];
                url = doc[google.picker.Document.URL];
            }
            var message = 'You picked: ' + url;
            document.getElementById('result').innerHTML = message;
            var resp = UrlFetchApp.fetch(csvUrl,
                {
                    headers: headers,
                    validateHttpsCertificates: false
                });
            var csvContent = parseCsvResponse_(resp.getContentText());
        }
    
